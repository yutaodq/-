构建流式应用―RxJS详解
https://github.com/joeyguo/blog/issues/11

Observable其实就是可观测数据流（stream）， 流是在时间流逝的过程中产生的一系列事件。
它具有时间与事件响应的概念。

我们可以把一切输入都当做数据流来处理，比如说：

用户操作 网络响应   定时器   Worker


RxJS 的观察者 + 迭代器模式
RxJS 中含有两个基本概念：Observables 与 Observer。Observables 作为被观察者，是一个值或事件的流集合；而 Observer 则作为观察者，根据 Observables 进行处理。
Observables 与 Observer 之间的订阅发布关系(观察者模式) 如下：

订阅：Observer 通过 Observable 提供的 subscribe() 方法订阅 Observable。
发布：Observable 通过回调 next 方法向 Observer 发布事件。
下面为 Observable 与 Observer 的伪代码

// Observer
var Observer = {
    next(value) {
        alert(`收到${value}`);
    }
};

// Observable
function Observable (Observer) {
    setTimeout(()=>{
        Observer.next('A');
    },1000)
}

// subscribe
Observable(Observer);