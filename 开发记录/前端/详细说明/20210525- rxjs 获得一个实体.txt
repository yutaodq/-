/*
使用  .entities$.pipe  查找案例
*/

@Injectable()
export class VehicleFacade {
  private _collectionService: EntityCollectionService<Vehicle>;
  private subscriptions: Array<Subscription> = [];

  constructor(
    private _appState$: Store<fromStaes.State>,
    entityServices: EntityServices
  ) {
    this._collectionService =
      entityServices.getEntityCollectionService('Vehicle');

  }
  //  获得一个实体
    vehicleName$: Observable<Vehicle> =  this._vehicleFacade.entities$.pipe(
      switchMap((vehicles) => vehicles.sort((a, b) => a.name.localeCompare(b.name))),
      filter(vehicle => vehicle.name.toString().toLocaleLowerCase().indexOf(name.toString().toLocaleLowerCase()) !== -1),
      distinct( vehicle =>vehicle.name),
  );
  
  //  获得实体数组

    vehicleName$: Observable<Vehicle[]> =  this._vehicleFacade.entities$.pipe(
      switchMap((vehicles) => vehicles.sort((a, b) => a.name.localeCompare(b.name))),
      filter(vehicle => vehicle.name.toString().toLocaleLowerCase().indexOf(name.toString().toLocaleLowerCase()) !== -1),
      distinct( vehicle =>vehicle.name),
      toArray()
  );

// map()

  get entitie$(): Observable<Vehicle[]> {
    return this._collectionService.entities$.pipe(
      map((vehicles) => vehicles.map((vehicle) => vehicle))
    )
  }
  
  错误的代码： filter(vehicle 中的vehicle 是vehicle[] 不能 vehicle.name
  get entitie$(): Observable<Vehicle[]> {
    return this._collectionService.entities$.pipe(
      map((vehicles) => vehicles.map((vehicle) => vehicle))
      filter(vehicle => vehicle.name.toString().toLocaleLowerCase().indexOf(name.toString().toLocaleLowerCase()) !== -1),
      
    )
  }

  
/****

vehicleName$: Vehicle[]


    this._vehicleFacade.entities$.pipe(
      map( (value) => value.map((value1) =>  value1))
    )
      .subscribe(a => this.vehicleName$ = a);
      

       console.log(this.vehicleName$)
结果显示：
[{id: '1', name: '11', pz: '1'}, {id: '2', name: '22', pz: '2'}，{id: '3', name: '33', pz: '3'}]   
****/


/****
    this._vehicleFacade.entities$.pipe()
      .subscribe(a => this.vehicleName$ = a);

    console.log("this.vehicleName$")
结果显示：
[{0: {id: '1', name: '11', pz: '1'}}, {1: {id: '2', name: '22', pz: '2'}}，{2: {id: '3', name: '33', pz: '3'}}]   

可索引类型
[id: number] : Vehicle

****/

/****

   this._vehicleFacade.entities$.pipe(map((vehicles) => this.vehicleName$  = vehicles)).subscribe();
    console.log('aaaaaaaaaaaaaaa: ' + name);
    console.log(this.vehicleName$)
结果显示：
[{0: {id: '1', name: '11', pz: '1'}}, {1: {id: '2', name: '22', pz: '2'}}，{2: {id: '3', name: '33', pz: '3'}}]   

****/


  selectEntityById(id: number): Observable<Drug> {
    return this.entities$.pipe(
      map(arr => arr.find(e => {
        return e && e.barcode === id;
      })),
    );
  }

  public selectEntitiesByName(name: string): Observable<Drug[]> {
    return this.entities$.pipe(
      map(arr => arr.filter(e => e.name.toLocaleLowerCase().includes(name.toLocaleLowerCase()))),
    );
  }

  public selectEntityByName(name: string): Observable<Drug> {
    return this.entities$.pipe(
      map(arr => arr.find(e => e.name.toLocaleLowerCase() === name.toLocaleLowerCase())),
    );
  }

  public selectEntitiesByBarcode(barcode: number): Observable<Drug[]> {
    return this.entities$.pipe(
      map(arr => arr.filter(e => e.barcode.toString().toLocaleLowerCase().startsWith(barcode.toString().toLocaleLowerCase()))),
    );
  }

  public selectEntityByBarcode(barcode: number): Observable<Drug> {
    return this.entities$.pipe(
      map(arr => arr.find(e => {
        return e && e.barcode === barcode;
      })),
    );
  }
  
  