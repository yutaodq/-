/*
使用  .entities$.pipe  查找案例
*/

@Injectable()
export class VehicleFacade {
  private _collectionService: EntityCollectionService<Vehicle>;
  private subscriptions: Array<Subscription> = [];

  constructor(
    private _appState$: Store<fromStaes.State>,
    entityServices: EntityServices
  ) {
    this._collectionService =
      entityServices.getEntityCollectionService('Vehicle');

  }
  //  获得一个实体
  
  get entitie$(): Observable<Vehicle> {
    return this._collectionService.entities$.pipe(
      map((vehicles) => vehicles.map((vehicle) => vehicle))
    )

  }
}


  selectEntityById(id: number): Observable<Drug> {
    return this.entities$.pipe(
      map(arr => arr.find(e => {
        return e && e.barcode === id;
      })),
    );
  }

  public selectEntitiesByName(name: string): Observable<Drug[]> {
    return this.entities$.pipe(
      map(arr => arr.filter(e => e.name.toLocaleLowerCase().includes(name.toLocaleLowerCase()))),
    );
  }

  public selectEntityByName(name: string): Observable<Drug> {
    return this.entities$.pipe(
      map(arr => arr.find(e => e.name.toLocaleLowerCase() === name.toLocaleLowerCase())),
    );
  }

  public selectEntitiesByBarcode(barcode: number): Observable<Drug[]> {
    return this.entities$.pipe(
      map(arr => arr.filter(e => e.barcode.toString().toLocaleLowerCase().startsWith(barcode.toString().toLocaleLowerCase()))),
    );
  }

  public selectEntityByBarcode(barcode: number): Observable<Drug> {
    return this.entities$.pipe(
      map(arr => arr.find(e => {
        return e && e.barcode === barcode;
      })),
    );
  }